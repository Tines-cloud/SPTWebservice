// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPTUserService.Data;

#nullable disable

namespace SPTUserService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240721185406_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SPTUserService.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("SPTUserService.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Username");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SPTUserService.Models.UserPreference", b =>
                {
                    b.Property<int>("UserPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPreferenceId"));

                    b.Property<int>("DefBreakTime")
                        .HasColumnType("int");

                    b.Property<int>("DefFocusTime")
                        .HasColumnType("int");

                    b.Property<bool>("Notifications")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserPreferenceId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserPreference");
                });

            modelBuilder.Entity("SPTUserService.Models.User", b =>
                {
                    b.HasOne("SPTUserService.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SPTUserService.Models.UserPreference", b =>
                {
                    b.HasOne("SPTUserService.Models.User", "User")
                        .WithOne("UserPreference")
                        .HasForeignKey("SPTUserService.Models.UserPreference", "Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SPTUserService.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SPTUserService.Models.User", b =>
                {
                    b.Navigation("UserPreference")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
